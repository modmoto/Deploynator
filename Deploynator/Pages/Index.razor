@page "/"

<h1>@_handler.CurrentSelection</h1>

<h1>All Deployments</h1>
@foreach (var d in _handler.ReleaseDefinitions)
{
    <h4>@d.Name</h4>
}


<h1>Selected Deployments</h1>
@foreach (var d in _handler.SelectedReleaseDefinitions)
{
    <h4>@d.Name</h4>
}

<button @onclick="() => Do(() => _handler.MoveU())">ub</button>
<button @onclick="() => Do(() => _handler.MoveDown())">down</button>
<button @onclick="() => Do(() => _handler.Select())">select</button>
<button @onclick="() => Do(() => _handler.Deselect())">unselect</button>

<select>
    @foreach (var o in languages)
    {
        <option @onselect="() => _setting.Person = o">@o</option>
    }
</select>

@inject EventBus _eventBus
@inject DeploymentHandler _handler
@inject LanguageSetting _setting

@code {

    private List<string> languages = new List<string>
    {
        "en-US-SaraNeural",
        "es-MX-JorgeNeural",
    };

    protected override void OnInitialized()
    {
        _eventBus.ReleaseButtonTriggered += (_, _) => InvokeAsync(() => StateHasChanged());
        _eventBus.ReleaseButtonReleased += (_, _) => InvokeAsync(() => StateHasChanged());
        _eventBus.ReleaseLoaded += (_, _) => InvokeAsync(() => StateHasChanged());

        _eventBus.SelectedDeloyment += (_, _) => InvokeAsync(() => StateHasChanged());
        _eventBus.PreselectedDeloyment += (_, _) => InvokeAsync(() => StateHasChanged());
        _eventBus.DownButtonTriggered += (_, _) => InvokeAsync(() => StateHasChanged());
        _eventBus.UpButtonTriggered += (_, _) => InvokeAsync(() => StateHasChanged());
    }


    private void Do(Action action)
    {
        action.Invoke();
        StateHasChanged();
    }

}
